---
# 1.3.1 Ensure sudo is installed
# 1.4.1 Ensure AIDE is installed
# 1.7.1.1 Ensure SELinux is installed
# 2.2.1.1 Ensure time synchronization is in use
# 3.4.1.1 Ensure a Firewall package is installed
# 4.1.1.1 Ensure auditd is installed
# 4.2.1.1 Ensure rsyslog is installed
- name: Install packages
  dnf:
    name:
      - python3-pexpect
      - python3-libselinux
      - sudo
      - aide
      - libselinux
      - chrony
      - nftables
      - audit
      - audit-libs
      - rsyslog
    state: present
  tags: yum

# 1.1.22 Disable Automounting
# 1.2.2 Disable the rhnsd Daemon
# 1.7.1.6 Ensure SETroubleshoot is not installed
# 1.7.1.7 Ensure the MCS Translation Service (mcstrans) is not installed
# 2.1.1 Ensure xinetd is not installed
# 2.2.2 Ensure X Window System is not installed
# 2.2.3 Ensure rsync service is not enabled
# 2.2.4 Ensure Avahi Server is not enabled
# 2.2.5 Ensure SNMP Server is not enabled
# 2.2.6 Ensure HTTP Proxy Server is not enabled
# 2.2.7 Ensure Samba is not enabled
# 2.2.8 Ensure IMAP and POP3 server is not enabled
# 2.2.9 Ensure HTTP server is not enabled
# 2.2.10 Ensure FTP Server is not enabled
# 2.2.11 Ensure DNS Server is not enabled
# 2.2.12 Ensure NFS is not enabled
# 2.2.13 Ensure RPC is not enabled
# 2.2.15 Ensure DHCP Server is not enabled
# 2.2.16 Ensure CUPS is not enabled
# 2.2.17 Ensure NIS Server is not enabled
# 2.2.18 Ensure mail transfer agent is configured for local-only mode
# 2.3.1 Ensure NIS Client is not installed
# 2.3.2 Ensure telnet client is not installed
# 2.3.3 Ensure LDAP client is not installed
- name: Remove packages
  dnf:
    name:
      - autofs
      - rhnsd
      - setroubleshoot
      - mcstrans
      - xinetd
      - xorg-x11-server-common
      - rsyncd
      - avahi
      - net-snmp
      - squid
      - samba-common
      - dovecot
      - httpd
      - vsftpd
      - bind
      - nfs-utils
      - rpcbind
      - openldap-servers
      - dhcp-server
      - cups
      - ypserv
      - postfix
      - ypbind
      - telnet
      - openldap-clients
      - wpa_supplicant
    state: absent
    autoremove: yes
  tags: yum

# 1.9 Ensure updates, patches, and additional security software are installed
- name: Update packages
  dnf:
    name: '*'
    state: latest
  tags: yum

# 1.1.1.1 Ensure mounting of cramfs filesystems is disabled
# 1.1.1.2 Ensure mounting of vFAT filesystems is limited
# 1.1.1.3 Ensure mounting of squashfs filesystems is disabled
# 1.1.1.4 Ensure mounting of udf filesystems is disabled
# 1.1.23 Disable USB Storage
# 3.3.1 Ensure DCCP is disabled
# 3.3.2 Ensure SCTP is disabled
# 3.3.3 Ensure RDS is disabled
# 3.3.4 Ensure TIPC is disabled
- name: Configure modprobe
  ansible.builtin.copy:
    src: files/modprobe.conf
    dest: /etc/modprobe.d/cis.conf
    owner: root
    group: root
    mode: '0644'

- name: dracut test
  command: /sbin/lsmod
  register: lsmod
  changed_when: False

- name: rmmod sr_mod
  command: rmmod sr_mod
  when: lsmod.stdout.find('sr_mod') != -1

- name: rmmod cdrom
  command: rmmod cdrom
  when: lsmod.stdout.find('cdrom') != -1
  notify: dracut

# 1.6.2 Ensure address space layout randomization (ASLR) is enabled
# 3.1.1 Ensure IP forwarding is disabled
# 3.1.2 Ensure packet redirect sending is disabled
# 3.2.2 Ensure ICMP redirects are not accepted
# 3.2.3 Ensure secure ICMP redirects are not accepted
# 3.2.1 Ensure source routed packets are not accepted
# 3.2.4 Ensure suspicious packets are logged
# 3.2.5 Ensure broadcast ICMP requests are ignored
# 3.2.6 Ensure bogus ICMP responses are ignored
# 3.2.7 Ensure Reverse Path Filtering is enabled
# 3.2.8 Ensure TCP SYN Cookies is enabled
# 3.2.9 Ensure IPv6 router advertisements are not accepted
# 3.6 Disable IPv6
- name: Configure sysctl
  ansible.builtin.copy:
    src: files/sysctl.conf
    dest: /etc/sysctl.d/99-cis.conf
    owner: root
    group: root
    mode: '0644'

# 1.1.2 Ensure /tmp is configured
# 1.1.3 Ensure nodev option set on /tmp partition
# 1.1.4 Ensure nosuid option set on /tmp partition
# 1.1.5 Ensure noexec option set on /tmp partition
- name: Configure /tmp in fstab
  ansible.builtin.lineinfile:
    path: /etc/fstab
    state: present
    regexp: ' /tmp '
    line: 'tmpfs /tmp tmpfs defaults,noexec,nosuid,nodev 0 0'

- name: Disable tmp.mount systemd unit
  ansible.builtin.systemd:
    name: tmp.mount
    enabled: no
  changed_when: False

# 1.1.15 Ensure nodev option set on /dev/shm partition
# 1.1.16 Ensure nosuid option set on /dev/shm partition
# 1.1.17 Ensure noexec option set on /dev/shm partition
- name: Configure /dev/shm in fstab
  ansible.builtin.lineinfile:
    path: /etc/fstab
    state: present
    regexp: ' /dev/shm '
    line: 'tmpfs /dev/shm tmpfs defaults,noexec,nosuid,nodev 0 0'

# 1.1.7 Ensure separate partition exists for /var/tmp
# 1.1.8 Ensure nodev option set on /var/tmp partition
# 1.1.9 Ensure nosuid option set on /var/tmp partition
# 1.1.10 Ensure noexec option set on /var/tmp partition
- name: /var/tmp check
  ansible.builtin.command: grep ' /var/tmp ' /etc/fstab
  register: vartmp_check
  failed_when: "vartmp_check.rc == 2"
  changed_when: False

- name: /var/tmp message
  ansible.builtin.fail:
    msg: '/var/tmp does not have its own partition as per 1.1.7'
  when: vartmp_check.stdout == ""
  ignore_errors: yes

- name: Configure /var/tmp in fstab
  ansible.builtin.replace:
    path: /etc/fstab
    regexp: '^(.*)\s+/var/tmp\s+(.*)\s+[a-z,]+\s+[0-2]\s+[0-2]$'
    replace: '\1 /var/tmp \2 noexec,nosuid,nodev 0 0'
  when: "vartmp_check.rc == 0"

# 1.1.13 Ensure separate partition exists for /home
# 1.1.14 Ensure nodev option set on /home partition
- name: /home check
  ansible.builtin.command: grep ' /home ' /etc/fstab
  register: home_check
  failed_when: "home_check.rc == 2"
  changed_when: False

- name: /home message
  ansible.builtin.fail:
    msg: '/home does not have its own partition as per 1.1.13'
  when: home_check.stdout == ""
  ignore_errors: yes

- name: Configure /home in fstab
  ansible.builtin.replace:
    path: /etc/fstab
    regexp: '^(.*)\s+/home\s+(.*)\s+[a-z,]+\s+[0-2]\s+[0-2]$'
    replace: '\1 /home \2 nodev 1 2'
  when: "home_check.rc == 0"

# 1.2.3 Ensure GPG keys are configured
# 1.2.4 Ensure gpgcheck is globally activated
- name: Enable gpgcheck in yum.conf
  ansible.builtin.lineinfile:
    path: /etc/yum.conf
    state: present
    regexp: '^gpgcheck.*$'
    line: 'gpgcheck = 1'

- name: Find repo files
  ansible.builtin.find:
    paths: /etc/yum.repos.d
    patterns: '*.repo'
  register: repofiles

- name: Enable gpgcheck in yum.repos.d
  ansible.builtin.replace:
    path: '{{ item.path }}'
    regexp: '^gpgcheck.*$'
    replace: 'gpgcheck = 1'
  with_items: '{{ repofiles.files }}'

# 1.3.2 Ensure sudo commands use pty
# 1.3.3 Ensure sudo log file exists
- name: Configure sudoers
  ansible.builtin.lineinfile:
    path: /etc/sudoers
    state: present
    regexp: '^#includedir /etc/sudoers.d$'
    line: '#includedir /etc/sudoers.d'

- name: Configure sudoers.d
  ansible.builtin.copy:
    src: files/sudoers
    dest: /etc/sudoers.d/01_cis
    owner: root
    group: root
    mode: '0440'

# 1.4.2 Ensure filesystem integrity is regularly checked
- name: Initialise aide
  ansible.builtin.command: aide --init
  args:
    creates: /var/lib/aide/aide.db.*

- name: Backup aide
  ansible.builtin.command: mv /var/lib/aide/aide.db.new.gz /var/lib/aide/aide.db.gz
  args:
    creates: /var/lib/aide/aide.db.gz

- name: Add aide cronjob
  ansible.builtin.cron:
    name: "aide"
    minute: "0"
    hour: "5"
    job: "/usr/sbin/aide --check"

# 1.5.1 Ensure permissions on bootloader config are configured
- name: grub.cfg permissions
  ansible.builtin.file:
    path: /boot/grub2/grub.cfg
    owner: root
    group: root
    mode: '0600'

- name: grubenv permissions
  ansible.builtin.file:
    path: /boot/grub2/grubenv
    owner: root
    group: root
    mode: '0600'

- name: grub timeout
  lineinfile:
    path: /etc/default/grub
    regexp: '^GRUB_TIMEOUT='
    line: 'GRUB_TIMEOUT=1'
    state: present
  notify: grub2-mkconfig

# 1.5.2 Ensure bootloader password is set
- name: grub password
  ansible.builtin.expect:
    command: grub2-setpassword
    responses:
      Enter password: "{{ grub_password }}"
      Confirm password: "{{ grub_password }}"
    creates: /boot/grub2/user.cfg
  notify: grub2-mkconfig
  no_log: true

# 1.5.3 Ensure authentication required for single user mode
- name: Configure emergency.service
  ansible.builtin.lineinfile:
    path: /usr/lib/systemd/system/emergency.service
    state: present
    regexp: '^ExecStart'
    line: 'ExecStart=-/usr/lib/systemd/systemd-sulogin-shell emergency'

- name: Configure rescue.service
  ansible.builtin.lineinfile:
    path: /usr/lib/systemd/system/rescue.service
    state: present
    regexp: '^ExecStart'
    line: 'ExecStart=-/usr/lib/systemd/systemd-sulogin-shell rescue'

# 1.6.1 Ensure core dumps are restricted
- name: Disable coredump storage
  ansible.builtin.lineinfile:
    path: /etc/systemd/coredump.conf
    state: present
    regexp: '^Storage'
    line: 'Storage=none'

- name: Limit coredump size
  ansible.builtin.lineinfile:
    path: /etc/systemd/coredump.conf
    state: present
    regexp: '^ProcessSizeMax'
    line: 'ProcessSizeMax=0'

- name: Limit coredumps
  ansible.builtin.lineinfile:
    path: /etc/security/limits.conf
    state: present
    regexp: '^.*hard\s+core.*$'
    line: '* hard core 0'

# 1.7.1.2 Ensure SELinux is not disabled in bootloader configuration
- name: grub selinux check
  ansible.builtin.replace:
    path: /etc/default/grub
    regexp: '(selinux|enforcing)\s*=\s*0\s*'
    replace: ''
  notify: grub2-mkconfig

# 1.7.1.3 Ensure SELinux policy is configured
# 1.7.1.4 Ensure the SELinux state is enforcing
- name: Enforce selinux
  selinux:
    policy: targeted
    state: enforcing

# 1.8.1.1 Ensure message of the day is configured properly
# 1.8.1.2 Ensure local login warning banner is configured properly
# 1.8.1.3 Ensure remote login warning banner is configured properly
# 1.8.1.4 Ensure permissions on /etc/motd are configured
# 1.8.1.5 Ensure permissions on /etc/issue are configured
# 1.8.1.6 Ensure permissions on /etc/issue.net are configured
- name: Empty motd
  ansible.builtin.copy:
    src: files/empty
    dest: /etc/motd
    owner: root
    group: root
    mode: '0644'

- name: Configure issue
  ansible.builtin.copy:
    src: files/motd
    dest: /etc/issue
    owner: root
    group: root
    mode: '0644'

- name: Configure issue.net
  ansible.builtin.copy:
    src: files/motd
    dest: /etc/issue.net
    owner: root
    group: root
    mode: '0644'

# 1.8.2 Ensure GDM login banner is configured
- name: Configure gdm3 banner
  ansible.builtin.copy:
    src: files/greeter.dconf-defaults
    dest: /etc/gdm3/
    owner: root
    group: root
    mode: '0644'

# 1.10 Ensure system-wide crypto policy is not legacy
# 1.11 Ensure system-wide crypto policy is FUTURE or FIPS
- name: Configure crypto-policy
  ansible.builtin.command: fips-mode-setup --enable
  changed_when: False

# 2.2.1.2 Ensure chrony is configured
- name: Remove default ntp servers
  ansible.builtin.lineinfile:
    path: /etc/chrony.conf
    regexp: '^server.*$'
    state: absent
  changed_when: False

- name: Add chosen ntp servers
  ansible.builtin.blockinfile:
    path: /etc/chrony.conf
    block: |
      server {{ ntp_server }}
      bindaddress 127.0.0.1
  changed_when: False

- name: Configure ntp ipv4 only
  ansible.builtin.lineinfile:
    path: /etc/sysconfig/chronyd
    regexp: '^OPTIONS='
    line: 'OPTIONS="-4"'
    state: present

# 2.2.14 Ensure LDAP server is not enabled
- name: Disable slapd
  ansible.builtin.systemd:
    name: slapd
    enabled: no
  ignore_errors: yes

# 3.4.2.2 Ensure iptables is not enabled
- name: Disable iptables
  ansible.builtin.systemd:
    name: iptables
    enabled: no
  ignore_errors: yes

- name: Disable firewalld
  ansible.builtin.systemd:
    name: firewalld
    enabled: no
    masked: yes

# 3.4.3.2 Ensure a table exists
# 3.4.3.3 Ensure base chains exist
# 3.4.3.4 Ensure loopback traffic is configured
# 3.4.3.5 Ensure outbound and established connections are configured
# 3.4.3.6 Ensure default deny firewall policy
# 3.4.3.7 Ensure nftables service is enabled
# 3.4.3.8 Ensure nftables rules are permanent
- name: Configure nftables rules
  ansible.builtin.copy:
    src: files/nftables.rules
    dest: /etc/nftables/nftables.rules
    owner: root
    group: root
    mode: '0600'

- name: Configure nftables
  ansible.builtin.lineinfile:
    path: /etc/sysconfig/nftables.conf
    state: present
    regexp: '^include "/etc/nftables/nftables.rules"$'
    line: 'include "/etc/nftables/nftables.rules"'

- name: Enable nftables
  ansible.builtin.systemd:
    name: nftables
    enabled: yes

# 3.5 Ensure wireless interfaces are disabled
- name: Disable wifi
  ansible.builtin.command: nmcli radio all off
  changed_when: False

# 4.1.1.2 Ensure auditd service is enabled
- name: Enable auditd
  ansible.builtin.systemd:
    name: auditd
    enabled: yes

# 4.1.1.3 Ensure auditing for processes that start prior to auditd is enabled
- name: grub audit check
  ansible.builtin.command: grep audit=1 /etc/default/grub
  register: audit_check
  failed_when: "audit_check.rc == 2"
  changed_when: False

- name: Enable audit
  ansible.builtin.replace:
    path: /etc/default/grub
    regexp: '^(GRUB_CMDLINE_LINUX=".*)"$'
    replace: '\1 audit=1"'
  when: audit_check.stdout == ""
  notify: grub2-mkconfig

# 4.1.1.4 Ensure audit_backlog_limit is sufficient
- name: grub backlog check
  ansible.builtin.command: grep audit_backlog_limit /etc/default/grub
  register: backlog_check
  failed_when: "backlog_check.rc == 2"
  changed_when: False

- name: Configure backlog
  ansible.builtin.replace:
    path: /etc/default/grub
    regexp: '^(GRUB_CMDLINE_LINUX=".*)"$'
    replace: '\1 audit_backlog_limit={{ audit_backlog_limit }}"'
  when: backlog_check.stdout == ""
  notify: grub2-mkconfig

# 4.1.2.1 Ensure audit log storage size is configured
- name: Configure audit log size
  ansible.builtin.lineinfile:
    path: /etc/audit/auditd.conf
    state: present
    regexp: '^max_log_file\s*\=\s*\d+$'
    line: 'max_log_file = {{ max_log_file_size }}'

# 4.1.2.2 Ensure audit logs are not automatically deleted
- name: Configure audit log rotation
  ansible.builtin.lineinfile:
    path: /etc/audit/auditd.conf
    state: present
    regexp: '^max_log_file_action\s*\=\s*.*$'
    line: 'max_log_file_action = {{ max_log_file_action }}'

# 4.1.2.3 Ensure system is disabled when audit logs are full
- name: Configure audit space left action
  ansible.builtin.lineinfile:
    path: /etc/audit/auditd.conf
    state: present
    regexp: '^space_left_action\s*\=\s*.*$'
    line: 'space_left_action = {{ space_left_action }}'

- name: Configure audit admin space left action
  ansible.builtin.lineinfile:
    path: /etc/audit/auditd.conf
    state: present
    regexp: '^admin_space_left_action\s*\=\s*.*$'
    line: 'admin_space_left_action = {{ admin_space_left_action }}'

# 4.1.3 Ensure changes to system administration scope (sudoers) is collected
# 4.1.4 Ensure login and logout events are collected
# 4.1.5 Ensure session initiation information is collected
# 4.1.6 Ensure events that modify date and time information are collected
# 4.1.7 Ensure events that modify the system's Mandatory Access Controls are collected
# 4.1.8 Ensure events that modify the system's network environment are collected
# 4.1.9 Ensure discretionary access control permission modification events are collected
# 4.1.10 Ensure unsuccessful unauthorized file access attempts are collected
# 4.1.11 Ensure events that modify user/group information are collected
# 4.1.12 Ensure successful file system mounts are collected
# 4.1.13 Ensure use of privileged commands is collected
# 4.1.14 Ensure file deletion events by users are collected
# 4.1.15 Ensure kernel module loading and unloading is collected
# 4.1.16 Ensure system administrator actions (sudolog) are collected
# 4.1.17 Ensure the audit configuration is immutable
- name: Configure audit rules
  ansible.builtin.copy:
    src: files/audit.rules
    dest: /etc/audit/rules.d/cis.rules
    owner: root
    group: root
    mode: '0600'
  notify: augenrules

# 4.2.1.2 Ensure rsyslog Service is enabled
- name: Enable rsyslog
  ansible.builtin.systemd:
    name: rsyslog
    enabled: yes

# 4.2.1.3 Ensure rsyslog default file permissions configured
# 4.2.1.4 Ensure logging is configured
# 4.2.1.5 Ensure rsyslog is configured to send logs to a remote log host
- name: Configure rsyslog.d
  ansible.builtin.copy:
    src: files/rsyslog.conf
    dest: /etc/rsyslog.d/cis.conf
    owner: root
    group: root
    mode: '0644'

- name: Configure rsyslog.conf
  ansible.builtin.lineinfile:
    path: /etc/rsyslog.conf
    state: present
    regexp: '^auth.*$'
    line: 'auth,authpriv.* /var/log/secure'

- name: Configure loghost
  ansible.builtin.lineinfile:
    path: /etc/hosts
    state: present
    regexp: '^{{ loghost }}.*$'
    line: '{{ loghost }} loghost'

# 4.2.2.1 Ensure journald is configured to send logs to rsyslog
- name: Configure journald forwarding
  ansible.builtin.lineinfile:
    path: /etc/systemd/journald.conf
    state: present
    regexp: '^ForwardToSyslog.*$'
    line: 'ForwardToSyslog=yes'

# 4.2.2.2 Ensure journald is configured to compress large log files
- name: Configure journald compression
  ansible.builtin.lineinfile:
    path: /etc/systemd/journald.conf
    state: present
    regexp: '^Compress.*$'
    line: 'Compress=yes'

# 4.2.2.3 Ensure journald is configured to write logfiles to persistent disk
- name: Configure journald persistance
  ansible.builtin.lineinfile:
    path: /etc/systemd/journald.conf
    state: present
    regexp: '^Storage.*$'
    line: 'Storage=persistent'

# 4.3 Ensure logrotate is configured
- name: Configure logrotate
  ansible.builtin.copy:
    src: files/logrotate
    dest: /etc/logrotate.d/cis
    owner: root
    group: root
    mode: '0644'

# 5.1.1 Ensure cron daemon is enabled
- name: Enable crond
  ansible.builtin.systemd:
    name: crond
    enabled: yes

# 5.1.2 Ensure permissions on /etc/crontab are configured
- name: Configure crontab permissions
  ansible.builtin.file:
    path: /etc/crontab
    owner: root
    group: root
    mode: '0600'

# 5.1.3 Ensure permissions on /etc/cron.hourly are configured
- name: Configure cron.hourly permissions
  ansible.builtin.file:
    path: /etc/cron.hourly
    owner: root
    group: root
    mode: '0700'

# 5.1.4 Ensure permissions on /etc/cron.daily are configured
- name: Configure cron.daily permissions
  ansible.builtin.file:
    path: /etc/cron.daily
    owner: root
    group: root
    mode: '0700'

# 5.1.5 Ensure permissions on /etc/cron.weekly are configured
- name: Configure cron.weekly permissions
  ansible.builtin.file:
    path: /etc/cron.weekly
    owner: root
    group: root
    mode: '0700'

# 5.1.6 Ensure permissions on /etc/cron.monthly are configured
- name: Configure cron.monthly permissions
  ansible.builtin.file:
    path: /etc/cron.monthly
    owner: root
    group: root
    mode: '0700'

# 5.1.7 Ensure permissions on /etc/cron.d are configured
- name: Configure cron.d permissions
  ansible.builtin.file:
    path: /etc/cron.d
    owner: root
    group: root
    mode: '0700'

# 5.1.8 Ensure at/cron is restricted to authorized users
- name: Empty cron.allow
  ansible.builtin.copy:
    src: files/empty
    dest: /etc/cron.allow
    owner: root
    group: root
    mode: '0600'

- name: Empty at.allow
  ansible.builtin.copy:
    src: files/empty
    dest: /etc/at.allow
    owner: root
    group: root
    mode: '0600'

- name: Delete cron.deny
  ansible.builtin.file:
    path: /etc/cron.deny
    state: absent

- name: Delete at.deny
  ansible.builtin.file:
    path: /etc/at.deny
    state: absent

# 5.2.1 Ensure permissions on /etc/ssh/sshd_config are configured
# 5.2.2 Ensure SSH access is limited
# 5.2.5 Ensure SSH LogLevel is appropriate
# 5.2.6 Ensure SSH X11 forwarding is disabled
# 5.2.7 Ensure SSH MaxAuthTries is set to 4 or less
# 5.2.8 Ensure SSH IgnoreRhosts is enabled
# 5.2.9 Ensure SSH HostbasedAuthentication is disabled
# 5.2.10 Ensure SSH root login is disabled
# 5.2.11 Ensure SSH PermitEmptyPasswords is disabled
# 5.2.12 Ensure SSH PermitUserEnvironment is disabled
# 5.2.13 Ensure SSH Idle Timeout Interval is configured
# 5.2.14 Ensure SSH LoginGraceTime is set to one minute or less
# 5.2.15 Ensure SSH warning banner is configured
# 5.2.16 Ensure SSH PAM is enabled
# 5.2.17 Ensure SSH AllowTcpForwarding is disabled
# 5.2.18 Ensure SSH MaxStartups is configured
# 5.2.19 Ensure SSH MaxSessions is set to 4 or less
- name: Configure sshd_config
  ansible.builtin.copy:
    src: files/sshd_config
    dest: /etc/ssh/sshd_config
    owner: root
    group: root
    mode: '0600'

# 5.2.3 Ensure permissions on SSH private host key files are configured
- name: Configure ecdsa private hostkey permissions
  ansible.builtin.file:
    path: /etc/ssh/ssh_host_ecdsa_key
    owner: root
    group: root
    mode: '0600'

- name: Configure ed25519 private hostkey permissions
  ansible.builtin.file:
    path: /etc/ssh/ssh_host_ed25519_key
    owner: root
    group: root
    mode: '0600'

- name: Configure rsa private hostkey permissions
  ansible.builtin.file:
    path: /etc/ssh/ssh_host_rsa_key
    owner: root
    group: root
    mode: '0600'

# 5.2.4 Ensure permissions on SSH public host key files are configured
- name: Configure ecdsa public hostkey permissions
  ansible.builtin.file:
    path: /etc/ssh/ssh_host_ecdsa_key.pub
    owner: root
    group: root
    mode: '0600'

- name: Configure ed25519 public hostkey permissions
  ansible.builtin.file:
    path: /etc/ssh/ssh_host_ed25519_key.pub
    owner: root
    group: root
    mode: '0600'

- name: Configure rsa public hostkey permissions
  ansible.builtin.file:
    path: /etc/ssh/ssh_host_rsa_key.pub
    owner: root
    group: root
    mode: '0600'

# 5.2.20 Ensure system-wide crypto policy is not over-ridden
- name: Configure sshd crypto policy
  ansible.builtin.lineinfile:
    path: /etc/sysconfig/sshd
    state: present
    regexp: '^# CRYPTO_POLICY=$'
    line: '# CRYPTO_POLICY='

# 5.4.2 Ensure lockout for failed password attempts is configured
# 5.4.4 Ensure password hashing algorithm is SHA-512
# 5.4.3 Ensure password reuse is limited
- name: Configure pam system
  ansible.builtin.copy:
    src: files/pam.d/system-auth
    dest: /etc/pam.d/system-auth
    owner: root
    group: root
    mode: '0644'

- name: Configure pam password
  ansible.builtin.copy:
    src: files/pam.d/password-auth
    dest: /etc/pam.d/password-auth
    owner: root
    group: root
    mode: '0644'

# 5.4.1 Ensure password creation requirements are configured
- name: Configure minlen
  ansible.builtin.lineinfile:
    path: /etc/security/pwquality.conf
    state: present
    regexp: '^minlen\s*=\s*'
    line: 'minlen = 16'

- name: Configure min_len
  ansible.builtin.lineinfile:
    path: /etc/login.defs
    state: present
    regexp: '^PASS_MIN_LEN.*$'
    line: 'PASS_MIN_LEN 16'

- name: Configure minclass
  ansible.builtin.lineinfile:
    path: /etc/security/pwquality.conf
    state: present
    regexp: '^minclass\s*=\s*'
    line: 'minclass = 4'

- name: Configure dcredit
  ansible.builtin.lineinfile:
    path: /etc/security/pwquality.conf
    state: present
    regexp: '^dcredit\s*=\s*'
    line: 'dcredit = -1'

- name: Configure ucredit
  ansible.builtin.lineinfile:
    path: /etc/security/pwquality.conf
    state: present
    regexp: '^ucredit\s*=\s*'
    line: 'ucredit = -1'

- name: Configure ocredit
  ansible.builtin.lineinfile:
    path: /etc/security/pwquality.conf
    state: present
    regexp: '^ocredit\s*=\s*'
    line: 'ocredit = -1'

- name: Configure lcredit
  ansible.builtin.lineinfile:
    path: /etc/security/pwquality.conf
    state: present
    regexp: '^lcredit\s*=\s*'
    line: 'lcredit = -1'

# 5.5.1.1 Ensure password expiration is 365 days or less
- name: Configure max days
  ansible.builtin.lineinfile:
    path: /etc/login.defs
    state: present
    regexp: '^PASS_MAX_DAYS.*$'
    line: 'PASS_MAX_DAYS 30'

# 5.5.1.2 Ensure minimum days between password changes is 7 or more
- name: Configure min days
  ansible.builtin.lineinfile:
    path: /etc/login.defs
    state: present
    regexp: '^PASS_MIN_DAYS.*$'
    line: 'PASS_MIN_DAYS 7'

# 5.5.1.3 Ensure password expiration warning days is 7 or more
- name: Configure warn age
  ansible.builtin.lineinfile:
    path: /etc/login.defs
    state: present
    regexp: '^PASS_WARN_AGE.*$'
    line: 'PASS_WARN_AGE 7'

# 5.5.1.4 Ensure inactive password lock is 30 days or less
- name: Configure inactive
  ansible.builtin.lineinfile:
    path: /etc/default/useradd
    state: present
    regexp: '^INACTIVE.*$'
    line: 'INACTIVE=1'

- name: Configure root expiry
  ansible.builtin.command: chage -d {{ ansible_date_time.date }} --maxdays 365 --mindays 7 {{ ansible_ssh_user }}

- name: Configure user expiry
  ansible.builtin.command: chage -d {{ ansible_date_time.date }} --maxdays 365 --mindays 7 root

# 5.5.4 Ensure default group for the root account is GID 0
- name: Configure root group
  ansible.builtin.command: usermod -g 0 root
  changed_when: False

# 5.5.3 Ensure default user shell timeout is 900 seconds or less
# 5.5.5 Ensure default user umask is 027 or more restrictive
- name: Configure bash
  ansible.builtin.copy:
    src: files/profile.sh
    dest: /etc/profile.d/cis.sh
    owner: root
    group: root
    mode: '0644'

- name: Configure cshell
  ansible.builtin.copy:
    src: files/profile.csh
    dest: /etc/profile.d/cis.csh
    owner: root
    group: root
    mode: '0644'

- name: Configure bashrc umask
  ansible.builtin.replace:
    path: /etc/bashrc
    regexp: 'umask\s+[0-9]+'
    replace: 'REMOVEUMASK=yes'
    backup: true

- name: Configure profile umask
  ansible.builtin.replace:
    path: /etc/profile
    regexp: 'umask\s+[0-9]+'
    replace: 'REMOVEUMASK=yes'
    backup: true

- name: Configure login.defs umask
  ansible.builtin.lineinfile:
    path: /etc/login.defs
    regexp: 'UMASK\s+[0-9]+'
    line: 'UMASK 027'

- name: Configure login.defs usergroups
  ansible.builtin.lineinfile:
    path: /etc/login.defs
    regexp: 'USERGROUPS_ENAB.*'
    line: 'USERGROUPS_ENAB no'

# 5.6 Ensure root login is restricted to system console
- name: Configure pam login
  ansible.builtin.copy:
    src: files/pam.d/login
    dest: /etc/pam.d/login
    owner: root
    group: root
    mode: '0644'

- name: Empty securetty
  ansible.builtin.copy:
    src: files/empty
    dest: /etc/securetty
    owner: root
    group: root
    mode: '0644'

# 5.7 Ensure access to the su command is restricted
- name: Create staff group
  ansible.builtin.group:
    name: staff
    state: present

- name: Add user to wheel group
  ansible.builtin.user:
    name: "{{ ansible_ssh_user }}"
    groups: staff,wheel
    append: yes

- name: Configure pam su
  ansible.builtin.copy:
    src: files/pam.d/su
    dest: /etc/pam.d/su
    owner: root
    group: root
    mode: '0644'

# 6.1.2 Ensure permissions on /etc/passwd are configured
- name: passwd permissions
  ansible.builtin.file:
    path: /etc/passwd
    owner: root
    group: root
    mode: '0644'

# 6.1.3 Ensure permissions on /etc/shadow are configured
- name: shadow permissions
  ansible.builtin.file:
    path: /etc/shadow
    owner: root
    group: root
    mode: '0000'

# 6.1.4 Ensure permissions on /etc/group are configured
- name: group permissions
  ansible.builtin.file:
    path: /etc/group
    owner: root
    group: root
    mode: '0644'

# 6.1.5 Ensure permissions on /etc/gshadow are configured
- name: gshadow permissions
  ansible.builtin.file:
    path: /etc/gshadow
    owner: root
    group: root
    mode: '0000'

# 6.1.6 Ensure permissions on /etc/passwd- are configured
- name: passwd- permissions
  ansible.builtin.file:
    path: /etc/passwd-
    owner: root
    group: root
    mode: '0644'

# 6.1.7 Ensure permissions on /etc/shadow- are configured
- name: shadow- permissions
  ansible.builtin.file:
    path: /etc/shadow-
    owner: root
    group: root
    mode: '0000'

# 6.1.8 Ensure permissions on /etc/group- are configured
- name: group- permissions
  ansible.builtin.file:
    path: /etc/group-
    owner: root
    group: root
    mode: '0644'

# 6.1.9 Ensure permissions on /etc/gshadow- are configured
- name: gshadow- permissions
  ansible.builtin.file:
    path: /etc/gshadow-
    owner: root
    group: root
    mode: '0000'

# 6.2.10 Ensure no users have .forward files
# 6.2.11 Ensure no users have .netrc files
# 6.2.12 Ensure users' .netrc Files are not group or world accessible
# 6.2.13 Ensure no users have .rhosts files
- name: Remove .forward/.netrc/.rhosts files
  ansible.builtin.command: find / -type f \( -name .forward -o -name .netrc -o -name .rhosts \) -exec rm {} \;
  changed_when: False




# N/A (as we are using nftables, are not a syslog server and not using authselect):
# 3.4.2.1 Ensure firewalld service is enabled and running
# 3.4.2.3 Ensure nftables is not enabled
# 3.4.2.4 Ensure default zone is set
# 3.4.2.5 Ensure network interfaces are assigned to appropriate zone
# 3.4.2.6 Ensure unnecessary services and ports are not accepted
# 3.4.3.1 Ensure iptables are flushed
# 3.4.4.1.1 Ensure default deny firewall policy
# 3.4.4.1.2 Ensure loopback traffic is configured
# 3.4.4.1.3 Ensure outbound and established connections are configured
# 3.4.4.1.4 Ensure firewall rules exist for all open ports
# 3.4.4.2.1 Ensure IPv6 default deny firewall policy
# 3.4.4.2.2 Ensure IPv6 loopback traffic is configured
# 3.4.4.2.3 Ensure IPv6 outbound and established connections are configured
# 3.4.4.2.4 Ensure IPv6 firewall rules exist for all open ports
# 4.2.1.6 Ensure remote rsyslog messages are only accepted on designated log hosts.
# 5.3.1 Create custom authselect profile
# 5.3.2 Select authselect profile
# 5.3.3 Ensure authselect includes with-faillock

# N/A (as test-only policies):
# 1.1.6 Ensure separate partition exists for /var
# 1.1.11 Ensure separate partition exists for /var/log
# 1.1.12 Ensure separate partition exists for /var/log/audit
# 1.1.18 Ensure nodev option set on removable media partitions
# 1.1.19 Ensure nosuid option set on removable media partitions
# 1.1.20 Ensure noexec option set on removable media partitions
# 1.1.21 Ensure sticky bit is set on all world-writable directories
# 1.2.1 Ensure Red Hat Subscription Manager connection is configured
# 1.2.5 Ensure package manager repositories are configured
# 1.7.1.5 Ensure no unconfined services exist
# 4.2.3 Ensure permissions on all logfiles are configured
# 5.5.1.5 Ensure all users last password change date is in the past
# 5.5.2 Ensure system accounts are secured
# 6.1.1 Audit system file permissions
# 6.1.10 Ensure no world writable files exist
# 6.1.11 Ensure no unowned files or directories exist
# 6.1.12 Ensure no ungrouped files or directories exist
# 6.1.13 Audit SUID executables
# 6.1.14 Audit SGID executables
# 6.2.1 Ensure password fields are not empty
# 6.2.2 Ensure no legacy "+" entries exist in /etc/passwd
# 6.2.3 Ensure root PATH Integrity
# 6.2.4 Ensure no legacy "+" entries exist in /etc/shadow
# 6.2.5 Ensure no legacy "+" entries exist in /etc/group
# 6.2.6 Ensure root is the only UID 0 account
# 6.2.7 Ensure users' home directories permissions are 750 or more restrictive
# 6.2.8 Ensure users own their home directories
# 6.2.9 Ensure users' dot files are not group or world writable
# 6.2.14 Ensure all groups in /etc/passwd exist in /etc/group
# 6.2.15 Ensure no duplicate UIDs exist
# 6.2.16 Ensure no duplicate GIDs exist
# 6.2.17 Ensure no duplicate user names exist
# 6.2.18 Ensure no duplicate group names exist
# 6.2.19 Ensure shadow group is empty
# 6.2.20 Ensure all users' home directories exist
