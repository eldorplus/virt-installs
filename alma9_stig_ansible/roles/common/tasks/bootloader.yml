---
# SRG-OS-000134-GPOS-00068 (selinux targetted)
# SRG-OS-000206-GPOS-00084 (quiet)
# SRG-OS-000037-GPOS-00015 (auditd)
# SRG-OS-000042-GPOS-00020
# SRG-OS-000062-GPOS-00031
# SRG-OS-000392-GPOS-00172
# SRG-OS-000462-GPOS-00206
# SRG-OS-000471-GPOS-00215
# SRG-OS-000473-GPOS-00218
# SRG-OS-000254-GPOS-00095
# SRG-OS-000341-GPOS-00132 (audit backlog)
# SRG-OS-000433-GPOS-00192 (slub, pti)
# SRG-OS-000480-GPOS-00227 (spawn, nx, page poison, vsyscall, perms)
# SRG-OS-000080-GPOS-00048 (grub username/password)
- name: Configure bootloader options
  ansible.builtin.command:
    cmd: >
      grubby --update-kernel=ALL --args="selinux=1 enforcing=1
      audit=1 audit_backlog_limit={{ auditd_audit_backlog_limit }}
      slub_debug=P pti=on page_poison=1 vsyscall=none quiet"
  changed_when: false
  tags: [grub, selinux, auditd, fips]

- name: Remove unwanted bootloader options
  ansible.builtin.command: grubby --update-kernel=ALL --remove-args="noexec systemd.confirm_spawn"
  changed_when: false
  tags: grub

- name: Configure bootloader password
  ansible.builtin.expect:
    command: grub2-setpassword
    responses:
      Enter password: "{{ grub_password }}"
      Confirm password: "{{ grub_password }}"
    creates: /boot/grub2/user.cfg
  notify: grub2-mkconfig
  no_log: true
  tags: grub

- name: Configure bootloader username
  ansible.builtin.replace:
    path: /etc/grub.d/01_users
    regexp: 'set superusers=.*'
    replace: 'set superusers="{{ grub_username }}"'
    backup: "{{ create_backups }}"
  notify: grub2-mkconfig
  tags: grub

- name: Combine bootloader username and password
  ansible.builtin.replace:
    path: /etc/grub.d/01_users
    regexp: 'password_pbkdf2.*'
    replace: "password_pbkdf2 {{ grub_username }} \\${GRUB2_PASSWORD}"
    backup: "{{ create_backups }}"
  notify: grub2-mkconfig
  tags: grub

- name: Configure bootloader permissions
  ansible.builtin.file:
    path: /boot/grub2/grub.cfg
    owner: root
    group: root
    mode: "0700"
  tags: [grub, perms]
