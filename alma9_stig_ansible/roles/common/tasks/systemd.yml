---
# SRG-OS-000355-GPOS-00143 (chrony enabled)
# SRG-OS-000359-GPOS-00146
- name: Enable chronyd
  ansible.builtin.systemd_service:
    name: chronyd.service
    state: started
    enabled: true
  tags: [ntp, systemd]

# SRG-OS-000096-GPOS-00050 (firewalld enabled)
# SRG-OS-000297-GPOS-00115
# SRG-OS-000480-GPOS-00232
- name: Enable firewalld
  ansible.builtin.systemd_service:
    name: firewalld.service
    state: started
    enabled: true
  tags: [firewall, systemd]

# SRG-OS-000042-GPOS-00021 (auditd enabled)
# SRG-OS-000051-GPOS-00024
# SRG-OS-000392-GPOS-00172
# SRG-OS-000122-GPOS-00063
# SRG-OS-000473-GPOS-00218
# SRG-OS-000472-GPOS-00217
# SRG-OS-000474-GPOS-00219
# SRG-OS-000365-GPOS-00152
# SRG-OS-000358-GPOS-00145
# SRG-OS-000348-GPOS-00136
# SRG-OS-000349-GPOS-00137
# SRG-OS-000350-GPOS-00138
# SRG-OS-000351-GPOS-00139
# SRG-OS-000352-GPOS-00140
# SRG-OS-000353-GPOS-00141
# SRG-OS-000354-GPOS-00142
# SRG-OS-000337-GPOS-00129
# SRG-OS-000062-GPOS-00031
# SRG-OS-000054-GPOS-00025
- name: Enable auditd
  ansible.builtin.systemd_service:
    name: auditd.service
    state: started
    enabled: true
  tags: [auditd, systemd]

# SRG-OS-000269-GPOS-00103 (journald enabled)
- name: Enable journald
  ansible.builtin.systemd_service:
    name: systemd-journald.service
    state: started
    enabled: true
  tags: [journald, systemd]

# SRG-OS-000370-GPOS-00155 (fapolicyd enabled)
- name: Enable fapolicyd
  ansible.builtin.systemd_service:
    name: fapolicyd.service
    state: started
    enabled: true
  tags: [fapolicyd, systemd]

# SRG-OS-000375-GPOS-00160 (pcscd enabled)
- name: Enable pcscd
  ansible.builtin.systemd_service:
    name: pcscd.socket
    state: started
    enabled: true
  tags: [smartcards, systemd]

# SRG-OS-000378-GPOS-00163 (usbguard enabled)
# configure before enabling
- name: Enable usbguard
  ansible.builtin.systemd_service:
    name: usbguard.service
    state: started
    enabled: true
  tags: [usbguard, systemd]

# SRG-OS-000424-GPOS-00188 (sshd enabled)
# SRG-OS-000426-GPOS-00190
- name: Enable sshd
  ansible.builtin.systemd_service:
    name: sshd.service
    state: started
    enabled: true
  tags: [ssh, systemd]

# SRG-OS-000342-GPOS-00133 (rsyslog enabled)
- name: Enable rsyslog
  ansible.builtin.systemd_service:
    name: rsyslog.service
    state: started
    enabled: true
  tags: [rsyslog, systemd]

# SRG-OS-000163-GPOS-00072 (idle sessions)
- name: Configure logind idle timeout
  ansible.builtin.lineinfile:
    path: /etc/systemd/logind.conf
    regexp: "^.*StopIdleSessionSec=.*$"
    line: StopIdleSessionSec=900
    state: present
    backup: "{{ create_backups }}"
  tags: systemd

- name: Configure logind user processes
  ansible.builtin.lineinfile:
    path: /etc/systemd/logind.conf
    regexp: "^.*KillUserProcesses=.*$"
    line: KillUserProcesses=no
    state: present
    backup: "{{ create_backups }}"
  tags: systemd

# SRG-OS-000324-GPOS-00125 (ctrlaltdel)
- name: Configure Ctrl-Alt-Del
  ansible.builtin.lineinfile:
    path: /etc/systemd/system.conf
    regexp: "^.*CtrlAltDelBurstAction=.*$"
    line: CtrlAltDelBurstAction=none
    state: present
    backup: "{{ create_backups }}"
  tags: systemd

- name: Disable ctrl-alt-del
  ansible.builtin.systemd_service:
    name: ctrl-alt-del.target
    masked: true
    state: stopped
  tags: systemd

- name: Disable debug shell
  ansible.builtin.systemd_service:
    name: debug-shell.service
    masked: true
    state: stopped
  tags: systemd

- name: Configure emergency shell
  ansible.builtin.lineinfile:
    path: /usr/lib/systemd/system/emergency.service
    regexp: "^ExecStart=-/usr/lib/systemd/systemd-sulogin-shell emergency$"
    line: ExecStart=-/usr/lib/systemd/systemd-sulogin-shell emergency
    state: present
    backup: "{{ create_backups }}"
  tags: systemd

- name: Configure rescue shell
  ansible.builtin.lineinfile:
    path: /usr/lib/systemd/system/rescue.service
    regexp: "^ExecStart=-/usr/lib/systemd/systemd-sulogin-shell rescue$"
    line: ExecStart=-/usr/lib/systemd/systemd-sulogin-shell rescue
    state: present
    backup: "{{ create_backups }}"
  tags: systemd

# SRG-OS-000480-GPOS-00227 (backtraces, storage, socket, kdump, ipsec etc.)
- name: Configure coredump trace
  ansible.builtin.lineinfile:
    path: /etc/systemd/coredump.conf
    regexp: "^.*ProcessSizeMax=.*$"
    line: ProcessSizeMax=0
    state: present
    backup: "{{ create_backups }}"
  tags: [systemd, coredumps]

- name: Configure coredump storage
  ansible.builtin.lineinfile:
    path: /etc/systemd/coredump.conf
    regexp: "^.*Storage=.*$"
    line: Storage=none
    state: present
    backup: "{{ create_backups }}"
  tags: [systemd, coredumps]

- name: Disable systemd-coredump
  ansible.builtin.systemd_service:
    name: systemd-coredump.socket
    masked: true
    state: stopped
  tags: [systemd, coredumps]

- name: Disable kdump
  ansible.builtin.systemd_service:
    name: kdump.service
    masked: true
    state: stopped
  tags: systemd

- name: Disable ipsec
  ansible.builtin.systemd_service:
    name: ipsec.service
    masked: true
    state: stopped
  tags: [systemd, ipsec]

# SRG-OS-000480-GPOS-00227 (headless boot)
- name: Configure default target
  ansible.builtin.command: systemctl set-default multi-user.target
  changed_when: false
  tags: systemd

- name: Run systemctl daemon-reexec
  ansible.builtin.systemd_service:
    daemon_reexec: true
  tags: systemd
