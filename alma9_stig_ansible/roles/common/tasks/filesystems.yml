---
# SRG-OS-000405-GPOS-00184 (luks)
# SRG-OS-000404-GPOS-00183 (luks)
# SRG-OS-000185-GPOS-00079 (luks)
# SRG-OS-000368-GPOS-00154 (mount options)
# SRG-OS-000480-GPOS-00227 (separate partitions)
# TODO: nfs/media mount options

- name: Configure /tmp
  ansible.builtin.replace:
    path: /etc/fstab
    regexp: '^(tmpfs.* /tmp \s* tmpfs \s* defaults),(size=[0-9]+m).* 0 0$'
    replace: '\1,\2,nodev,nosuid,noexec 0 0'
    backup: "{{ create_backups }}"
  tags: fstab

- name: Configure /dev/shm
  ansible.builtin.replace:
    path: /etc/fstab
    regexp: '^(tmpfs.* /dev/shm \s* tmpfs \s* defaults),(size=[0-9]+m).* 0 0$'
    replace: '\1,\2,nodev,nosuid,noexec 0 0'
    backup: "{{ create_backups }}"
  tags: fstab

- name: Configure /boot
  ansible.builtin.replace:
    path: /etc/fstab
    regexp: '^(UUID=.* /boot \s* xfs \s*)defaults.* 0 0$'
    replace: '\1defaults,nodev,nosuid 0 0'
    backup: "{{ create_backups }}"
  tags: fstab

- name: Configure /boot/efi
  ansible.builtin.replace:
    path: /etc/fstab
    regexp: '^(UUID=.* /boot/efi \s* vfat \s*)defaults.* 0 2$'
    replace: '\1defaults,dmask=0077,fmask=0077,uid=0,gid=0,shortname=winnt,nosuid 0 2'
    backup: "{{ create_backups }}"
  tags: fstab

# SRG-OS-000480-GPOS-00230 (separate /home)
- name: Configure /home
  ansible.builtin.replace:
    path: /etc/fstab
    regexp: '^(/dev/mapper/luks.* /home \s* xfs \s*)defaults.* 0 0$'
    replace: '\1defaults,nodev,nosuid,noexec 0 0'
    backup: "{{ create_backups }}"
  tags: fstab

- name: Configure /var
  ansible.builtin.replace:
    path: /etc/fstab
    regexp: '^(/dev/mapper/luks.* /var \s* xfs \s*)defaults.* 0 0$'
    replace: '\1defaults,nodev,nosuid 0 0'
    backup: "{{ create_backups }}"
  tags: fstab

- name: Configure /var/tmp
  ansible.builtin.replace:
    path: /etc/fstab
    regexp: '^(/dev/mapper/luks.* /var/tmp \s* xfs \s*)defaults.* 0 0$'
    replace: '\1defaults,nodev,nosuid,noexec 0 0'
    backup: "{{ create_backups }}"
  tags: fstab

- name: Configure /var/log
  ansible.builtin.replace:
    path: /etc/fstab
    regexp: '^(/dev/mapper/luks.* /var/log \s* xfs \s*)defaults.* 0 0$'
    replace: '\1defaults,nodev,nosuid,noexec 0 0'
    backup: "{{ create_backups }}"
  tags: fstab

# SRG-OS-000341-GPOS-00132 (audit size/partition)
- name: Configure /var/log/audit
  ansible.builtin.replace:
    path: /etc/fstab
    regexp: '^(/dev/mapper/luks.* /var/log/audit \s* xfs \s*)defaults.* 0 0$'
    replace: '\1defaults,nodev,nosuid,noexec 0 0'
    backup: "{{ create_backups }}"
  tags: fstab

- name: Find partition info
  ansible.builtin.command: lsblk -J -l -e11 -oNAME,FSTYPE,MOUNTPOINTS
  changed_when: false
  register: lsblk_json
  tags: fstab

- name: List non-LUKS partitions
  ansible.builtin.debug:
    msg: "{{ lsblk_json.stdout | from_json | json_query(jmesquery) }}"
  vars:
    jmesquery: >
      blockdevices[?fstype!='crypto_LUKS' &&
      !starts_with(name, 'luks-') &&
      fstype!=null &&
      !contains(mountpoints, '/boot') &&
      !contains(mountpoints, '/boot/efi') &&
      mountpoints[0]!=null].
      {name:name, fstype:fstype, mountpoint:mountpoints[0]}
  when: lsblk_json.stdout | from_json | json_query(jmesquery) | length > 0
  tags: fstab

# probably not required
- name: Run systemd daemon-reload
  ansible.builtin.systemd_service:
    daemon_reload: true
  tags: fstab
