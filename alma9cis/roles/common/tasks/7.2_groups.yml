---
- name: 7.2.1 Ensure accounts in /etc/passwd use shadowed passwords
  ansible.builtin.command: pwconv
  changed_when: false
  tags: groups

- name: Find empty passwords
  ansible.builtin.shell: "awk -F: '($2 == \"\" ) { print $1 }' /etc/shadow"
  changed_when: false
  register: empty_pwd
  tags: groups

- name: 7.2.2 Ensure /etc/shadow password fields are not empty
  ansible.builtin.debug:
    msg: "The following accounts have no password and should be fixed: {{ empty_pwd.stdout_lines }}"
  when: empty_pwd.stdout_lines | length > 0
  tags: groups

# TODO: simplify this
- name: Find users with non-existant groups
  ansible.builtin.shell:
    cmd: |
      set -o pipefail
      a_passwd_group_gid=("$(awk -F: '{print $4}' /etc/passwd | sort -u)")
      a_group_gid=("$(awk -F: '{print $3}' /etc/group | sort -u)")
      a_passwd_group_diff=("$(printf '%s\n' "${a_group_gid[@]}" "${a_passwd_group_gid[@]}" | sort | uniq -u)")
      while IFS= read -r l_gid; do
          awk -F: '($4 == '"$l_gid"') {print $1 }' /etc/passwd
      done < <(printf '%s\n' "${a_passwd_group_gid[@]}" "${a_passwd_group_diff[@]}" | sort | uniq -D | uniq)
      unset a_passwd_group_gid; unset a_group_gid; unset a_passwd_group_diff
  changed_when: false
  register: passwd_groups
  tags: groups

- name: 7.2.3 Ensure all groups in /etc/passwd exist in /etc/group
  ansible.builtin.debug:
    msg: "The following accounts have groups that don't exist and should be fixed: {{ passwd_groups.stdout_lines }}"
  when: passwd_groups.stdout_lines | length > 0
  tags: groups

- name: 7.2.4 Ensure shadow group is empty
  ansible.builtin.replace:
    path: /etc/group
    regexp: '^shadow:[^:]*:([^:]*):[^:]*\n$'
    replace: 'shadow:x:\1:\n'
    backup: "{{ create_backups }}"
  tags: groups

- name: Find duplicate UIDs
  ansible.builtin.shell:
    cmd: |
      set -o pipefail
      cut -f3 -d":" /etc/passwd | uniq -d
  changed_when: false
  register: dupe_uids
  tags: groups

- name: 7.2.5 Ensure no duplicate UIDs exist
  ansible.builtin.debug:
    msg: "The following duplicate UIDs were found and should be fixed: {{ dupe_uids.stdout_lines }}"
  when: dupe_uids.stdout_lines | length > 0
  tags: groups

- name: Find duplicate GIDs
  ansible.builtin.shell:
    cmd: |
      set -o pipefail
      cut -f3 -d":" /etc/group | uniq -d
  changed_when: false
  register: dupe_gids
  tags: groups

- name: 7.2.6 Ensure no duplicate GIDs exist
  ansible.builtin.debug:
    msg: "The following duplicate GIDs were found and should be fixed: {{ dupe_gids.stdout_lines }}"
  when: dupe_gids.stdout_lines | length > 0
  tags: groups

- name: Find duplicate usernames
  ansible.builtin.shell:
    cmd: |
      set -o pipefail
      cut -f1 -d":" /etc/passwd | uniq -d
  changed_when: false
  register: dupe_users
  tags: groups

- name: 7.2.7 Ensure no duplicate user names exist
  ansible.builtin.debug:
    msg: "The following duplicate usernames were found and should be fixed: {{ dupe_users.stdout_lines }}"
  when: dupe_users.stdout_lines | length > 0
  tags: groups

- name: Find duplicate groups
  ansible.builtin.shell:
    cmd: |
      set -o pipefail
      cut -f1 -d":" /etc/group | uniq -d
  changed_when: false
  register: dupe_groups
  tags: groups

- name: 7.2.8 Ensure no duplicate group names exist
  ansible.builtin.debug:
    msg: "The following duplicate groups were found and should be fixed: {{ dupe_groups.stdout_lines }}"
  when: dupe_groups.stdout_lines | length > 0
  tags: groups

- name: 7.2.9 Ensure local interactive user home directories are configured (root)
  ansible.builtin.file:
    path: /root
    owner: root
    group: root
    mode: "0700"
  tags: groups

- name: 7.2.9 Ensure local interactive user home directories are configured (user)
  ansible.builtin.file:
    path: /home/{{ ansible_ssh_user }}
    owner: "{{ ansible_ssh_user }}"
    group: "{{ ansible_ssh_user }}"
    mode: "0700"
  tags: groups

- name: 7.2.10 Ensure local interactive user dot files access is configured
  ansible.builtin.command: find / -type f \( -name .forward -o -name .netrc -o -name .rhosts \) -exec rm {} \;
  changed_when: false
  tags: groups
